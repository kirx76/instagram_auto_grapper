name: Publish on Docker Hub and Deploy after master push

on:
  push:
    branches:
      - 'master'
jobs:
#  run_build:
#    runs-on: [ubuntu-latest]
#    steps:
#      - uses: actions/checkout@master
#      - uses: actions/setup-python@v1
#        with:
#          python-version: '3.10'
#          architecture: 'x64'
#      - name: Install requirements
#        run: pip install -r requirements.txt

  build_and_pub:
#    needs: [run_build]
    runs-on: [ubuntu-latest]
    env:
      LOGIN: ${{ secrets.DOCKER_LOGIN }}
      NAME: ${{ secrets.DOCKER_NAME }}
    steps:
      - name: Login to docker.io
        run:  echo ${{ secrets.DOCKER_PWD }} | docker login -u ${{ secrets.DOCKER_LOGIN }} --password-stdin
      - uses: actions/checkout@master
      - name: Build image
        run: docker build -t $LOGIN/$NAME:${GITHUB_REF:11} -f Dockerfile .
      - name: Push image to docker.io
        run: docker push $LOGIN/$NAME:${GITHUB_REF:11}

  deploy:
      # Если мы успешно собрали контейнер и отправили в registry, то делаем хук деплоймент серверу
      # Попробуем готовый экшен curl из маркетплэйса
      needs: [build_and_pub]
      runs-on: [ubuntu-latest]
      steps:
#        - name: Set tag to env
#          run: echo ::set-env name=RELEASE_VERSION::$(echo ${GITHUB_REF:11})
        - name: Send webhook for deploy
          run: "curl --silent --show-error --fail -X POST ${{ secrets.DEPLOYMENT_SERVER }} -H 'Authorization: ${{ secrets.DEPLOYMENT_TOKEN }}' -H 'Content-Type: application/json' -d '{\"owner\": \"${{ secrets.DOCKER_LOGIN }}\", \"repository\": \"${{ secrets.DOCKER_NAME }}\", \"ports\": {\"8088\": 8088}}'"
