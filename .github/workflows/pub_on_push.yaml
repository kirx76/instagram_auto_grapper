name: Publish on Docker Hub and Deploy after master push

on:
  push:
    branches:
      - 'master'
jobs:
  #  run_build:
  #    runs-on: [ubuntu-latest]
  #    steps:
  #      - uses: actions/checkout@master
  #      - uses: actions/setup-python@v1
  #        with:
  #          python-version: '3.10'
  #          architecture: 'x64'
  #      - name: Install requirements
  #        run: pip install -r requirements.txt

  #  build_and_pub:
  #    needs: [run_build]
  #    runs-on: [ ubuntu-latest ]
  #    env:
  #      LOGIN: ${{ secrets.DOCKER_LOGIN }}
  #      NAME: ${{ secrets.DOCKER_NAME }}
  #      TG_BOT_TOKEN: ${{ secrets.TG_BOT_TOKEN }}
  #      IG_DUMP_FOLDER_PATH: ${{ secrets.IG_DUMP_FOLDER_PATH }}
  #      PG_APP_NAME: ${{ secrets.PG_APP_NAME }}
  #      PG_USER: ${{ secrets.PG_USER }}
  #      PG_USER_PASSWORD: ${{ secrets.PG_USER_PASSWORD }}
  #      PG_HOST: ${{ secrets.PG_HOST }}
  #      PG_PORT: ${{ secrets.PG_PORT }}
  #      BOTO3_ACCESS_KEY: ${{ secrets.BOTO3_ACCESS_KEY }}
  #      BOTO3_SECRET_KEY: ${{ secrets.BOTO3_SECRET_KEY }}
  #      BOTO3_BUCKET_NAME: ${{ secrets.BOTO3_BUCKET_NAME }}
  #      BOTO3_ENDPOINT_URL: ${{ secrets.BOTO3_ENDPOINT_URL }}
  #    steps:
  #      - name: Login to docker.io
  #        run: echo ${{ secrets.DOCKER_PWD }} | docker login -u ${{ secrets.DOCKER_LOGIN }} --password-stdin
  #      - uses: actions/checkout@master
  #      - name: Build image
  #        run: docker build -t $LOGIN/$NAME -f Dockerfile .
  #      - name: Push image to docker.io
  #        run: docker push $LOGIN/$NAME

  deploy:
#    needs: [ build_and_pub ]
    runs-on: [ ubuntu-latest ]
    steps:
      - name: Set tag to env
        run: echo ::set-env name=RELEASE_VERSION:${GITHUB_REF:11}
      - name: Send webhook for deploy
        run: 'curl --location --show-error --silent --fail --request POST "${{ secrets.DEPLOYMENT_SERVER }}" -H "Authorization: ${{ secrets.DEPLOYMENT_TOKEN }}" -H "Content-Type: application/json"'
